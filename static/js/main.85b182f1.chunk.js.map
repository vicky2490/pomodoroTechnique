{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","interval","undefined","countDown","second","setState","remindTime","startCountDown","clearInterval","setInterval","time","state","setAngle","angle","showTime","moment","startOf","add","format","countDownPause","_this2","react_default","a","createElement","className","type","placeholder","ReactKonva","width","height","x","y","innerRadius","outerRadius","strokeWidth","rotationDeg","fill","stroke","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85b182f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport moment from 'moment';\nimport {Layer,Stage,Arc} from 'react-konva';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      remindTime: 1500,\n      startCountDown: false,\n      angle: 0,\n    } \n  }\n\n  interval = undefined;\n\n  countDown = (second) => {\n    this.setState({\n      remindTime: second,\n      startCountDown: true,\n    });\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      let time = this.state.remindTime - 1;\n      let setAngle = this.state.angle + 0.24;\n      this.setState({\n        remindTime: time,\n        angle: setAngle,\n      });\n      if (this.state.remindTime <= 0) {\n        clearInterval(this.interval);\n      }\n    }, 1000);\n  }\n\n  showTime = () => {\n    const timer = moment()\n      .startOf('day')\n      .add(this.state.remindTime, 'second');\n    return timer.format('mm:ss');\n  }\n\n  countDownPause = () => {\n    this.interval && clearInterval(this.interval);\n    this.setState({\n      startCountDown: false,\n    });\n  }\n\n\nrender() {\n\n  return (\n    <div className=\"flex wrap\">\n\n      <div className=\"left-content\">\n        <div className=\"add-misson-box\">\n          <input className=\"mission-input\" type=\"text\" placeholder=\"ADD A NEW MISSIONâ€¦\"/>\n          <button>+</button>\n        </div>\n        <div className=\"middle-box\">\n          <div className=\"left-circle\"></div>\n          <div className=\"right-side\">\n            <div className=\"title\">THE FIRST THING TO DO TODAY</div>\n            <div className=\"circle-progress-bar\">\n            <Stage width={12} height={12}>\n              <Layer>\n                <Arc\n                  x={6} y={6}\n                  innerRadius={0}\n                  outerRadius={6}\n                  strokeWidth={0}\n                  angle={this.state.angle}\n                  rotationDeg={-90}\n                  fill='#FF4384'\n                  stroke={'#FF4384'}\n                />\n              </Layer>\n            </Stage>\n            <div className=\"circle-progress\"></div>           \n            </div>\n          </div>\n          <div className=\"time\">{this.showTime()}</div>\n        </div>\n        <div className=\"mission-list\">\n          <div className=\"mission\">\n            <div className=\"mission-circle\"></div>\n            <div className=\"mission-title\">THE SECOND THING TO DO TODAY</div>\n            <i className=\"material-icons\">play_circle_outline</i>\n          </div>\n          <div className=\"mission\">\n            <div className=\"mission-circle\"></div>\n            <div className=\"mission-title\">THE THIRD THING TO DO TODAY</div>\n            <i className=\"material-icons\">play_circle_outline</i>\n          </div>\n          <div className=\"mission mission-more-margin\">\n            <div className=\"mission-circle\"></div>\n            <div className=\"mission-title\">THE FORTH THING TO DO TODAY</div>\n            <i className=\"material-icons\">play_circle_outline</i>\n          </div>\n          <div className=\"more\">MORE</div>\n        </div>\n      </div>\n\n      <div className=\"outside-box\">\n        <div className=\"flex outside-flex-size\">\n          <div className=\"outside-circle flex\">\n            \n            <Stage width={540} height={540}>\n              <Layer>\n                <Arc\n                  x={270} y={270}\n                  innerRadius={0}\n                  outerRadius={270}\n                  strokeWidth={0}\n                  angle={this.state.angle}\n                  rotationDeg={-90}\n                  fill='#FF4384'\n                  stroke={'#FF4384'}\n                />\n              </Layer>\n            </Stage>\n            <div className={(!this.state.startCountDown) ? \"middle-circle flex\" : \"middle-circle middle-circle-white flex\"}>\n              <div className=\"play-arrow-relative\">\n               {\n                 (!this.state.startCountDown) ?\n                 <i className=\"material-icons play-arrow\" onClick={()=>this.countDown(this.state.remindTime)}>play_circle_filled </i> \n                 :\n                 <i className=\"material-icons on-pause\" onClick={()=>this.countDownPause()}>pause_circle_filled</i> \n               }\n                <div className={(!this.state.startCountDown) ? \"little-circle\" : \"little-circle little-circle-on-pause\"}></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"right-content\">\n        <div className=\"menu-list\">\n          <i className=\"material-icons menu-icon\">list</i>\n          <i className=\"material-icons menu-icon\">insert_chart_outlined</i>\n          <i className=\"material-icons menu-icon\">library_music</i>\n        </div>\n        <div className=\"slogan\">POMODORO</div>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/cssReset.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}